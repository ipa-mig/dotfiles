#!/bin/bash

###
### Script for checking the branches in all packages
###

### echo usage
function echo_usage() {
  echo "Usage: git-branch-all [options]"
  echo ""
  echo "Shows the branches of all repositories in the current folder."
  echo "Calls \"git branch\" internally on all directories in the current folder."
  echo ""
  echo "optional arguments:"
  echo "-h, --help           Show this help message and exit"
  echo "-r                   Pass -r to git branch command, to show remote branches"
  echo "--outputfile=<FILE>  File to pipe output in. "
  echo ""
}

### Main
# read in arguments
optspec=":hr-:"

OUTPUT=""
REMOTE=""

while getopts "$optspec" optchar; do
  case "${optchar}" in
    -)
      case "${OPTARG}" in
        help)
          echo_usage
          exit 2
          ;;
        outputfile=*)
          val=${OPTARG#*=}
          OUTPUT=$val
          ;;
        *)
          echo "Unknown option --${OPTARG}" >&2
          echo_usage
          exit 1
          ;;
      esac;;
    h)
      echo_usage
      exit 2
      ;;
    r)
      REMOTE="-r"
      ;;
    *)
      if [ "$OPTERR" != 1 ] || [ "${optspec:0:1}" = ":" ]; then
        echo "Non-option argument: '-${OPTARG}'" >&2
        echo_usage
        exit 1
      fi
      ;;
  esac
done

tmp=/tmp/output

# check if we are already in a git repo
if git rev-parse --git-dir > /dev/null 2>&1; then

  REPO=$(git rev-parse --git-dir)
  if [ $REPO == ".git" ]; then
    REPO=$(pwd)
  else
    REPO=${REPO%/.git}
  fi
  echo "__ git branch $REMOTE for repo: $REPO __" | tee -a $tmp
  git branch $REMOTE | tee -a $tmp
  echo "" | tee -a $tmp

else
    
  # get all installed repos
  ls -l $PWD | grep '^d' | awk '{print $9}' > /tmp/repos_tmp.txt

  # check git status for repos
  echo "--- Check git branch for all repository! ---" | tee $tmp
  echo "" | tee -a $tmp

  while read line
  do
      pushd $PWD/$line > /dev/null

  	  echo "__ git branch $REMOTE for repo: $line __" | tee -a $tmp
   	  git branch $REMOTE | tee -a $tmp
    	echo "" | tee -a $tmp

      popd > /dev/null
  done < /tmp/repos_tmp.txt

  # clean up tmp files
  rm /tmp/repos_tmp.txt

fi

if [ "$OUTPUT" == "" ]
  then
    echo "Done."
  else
    touch $OUTPUT
    cat $tmp > $OUTPUT
fi

rm $tmp

exit
