#!/bin/bash

###
### Script for checking all packages for changes
###

### echo usage
function echo_usage() {
  echo "Usage: git-fetch-all [options]"
  echo ""
  echo "Fetches of all repositories in the current folder."
  echo "Calls \"git fetch\" internally on all directories in the current folder."
  echo ""
  echo "optional arguments:"
  echo "-h, --help            Show this help message and exit."
  echo "-o, --origin=<ORIGIN> Only fetch the specified origin. By default calls \"git fetch --all\"."
  echo "-p, --purge           Call \"git fetch -p\"."
  echo "--outputfile=<FILE>   File to pipe output in. "
  echo ""
}

### Main
# read in arguments
optspec=":hpo:-:"

OUTPUT=""

ORIGIN="--all"
PURGE=""

while getopts "$optspec" optchar; do
  case "${optchar}" in
    -)
      case "${OPTARG}" in
        help)
          echo_usage
          exit 2
          ;;
        origin=*)
          val=${OPTARG#*=}
          ORIGIN=$val
          ;;
        purge)
          PURGE="-p"
          ;;
        outputfile=*)
          val=${OPTARG#*=}
          OUTPUT=$val
          ;;
        *)
          echo "Unknown option --${OPTARG}" >&2
          echo_usage
          exit 1
          ;;
      esac;;
    h)
      echo_usage
      exit 2
      ;;
    o)
      val=${OPTARG#*=}
      ORIGIN=$val
      ;;
    p)
      PURGE="-p"
      ;;
    *)
      if [ "$OPTERR" != 1 ] || [ "${optspec:0:1}" = ":" ]; then
        echo "Non-option argument: '-${OPTARG}'" >&2
        echo_usage
        exit 1
      fi
      ;;
  esac
done

# get all repos 
ls -l $PWD | grep '^d' | awk '{print $9}' > /tmp/repos_tmp.txt

tmp=/tmp/output

# check git status for repos
echo "--- Fetching all repos! ---" | tee $tmp
echo "" | tee -a $tmp

while read line
do
    pushd $PWD/$line > /dev/null

    echo "__ git fetch $ORIGIN $PURGE for repository: $line __" | tee -a $tmp

    git fetch $ORIGIN $PURGE | tee -a $tmp
    echo "" | tee -a $tmp

    popd > /dev/null
done < /tmp/repos_tmp.txt

# clean up tmp files
rm /tmp/repos_tmp.txt

if [ "$OUTPUT" == "" ]
  then
    echo "Done."
  else
    touch $OUTPUT
    cat $tmp > $OUTPUT
fi

rm $tmp

exit
