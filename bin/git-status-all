#!/bin/bash

###
### Script for checking all packages for changes
###

### echo usage
function echo_usage() {
  echo "Usage: git-status-all [options]"
  echo ""
  echo "Shows the status of all repositories in the current folder."
  echo "Calls \"git-branch-status -v\" and \"git status -s\" internally on all directories in the current folder."
  echo ""
  echo "optional arguments:"
  echo "-h, --help            Show this help message and exit"
  echo "-a, --all             Show information for all available branches"
  echo "--outputfile=<FILE>   File to pipe output in. "
  echo ""
}

### Main
# read in arguments
optspec=":ah-:"

OUTPUT=""

while getopts "$optspec" optchar; do
  case "${optchar}" in
    -)
      case "${OPTARG}" in
        all)
          ALL=true
          ;;
        help)
          echo_usage
          exit 2
          ;;
        outputfile=*)
          val=${OPTARG#*=}
          OUTPUT=$val
          ;;
        *)
          echo "Unknown option --${OPTARG}" >&2
          echo_usage
          exit 1
          ;;
      esac;;
    a)
      ALL=true
      ;;
    h)
      echo_usage
      exit 2
      ;;
    *)
      if [ "$OPTERR" != 1 ] || [ "${optspec:0:1}" = ":" ]; then
        echo "Non-option argument: '-${OPTARG}'" >&2
        echo_usage
        exit 1
      fi
      ;;
  esac
done

DATE=$(date +%s%N)
TMP=/tmp/git-all-$DATE
REPOS=/tmp/repos-$DATE.txt
# check if we are already in a git repo
if git rev-parse --git-dir > /dev/null 2>&1; then

  REPO=$(git rev-parse --git-dir)
  if [ $REPO == ".git" ]; then
    REPO=$(pwd)
  else
    REPO=${REPO%/.git}
  fi
  echo "__ git status for repository: $REPO __" | tee -a $TMP
  if [ "$ALL" ]
    then
      git-branch-status -av | tee -a $TMP
    else
      git-branch-status -v | tee -a $TMP
  fi
  echo "" | tee -a $TMP

else
  
  # get all repos 
  ls -l $PWD | grep '^d' | awk '{print $9}' > $REPOS

  # check git status for repos
  echo "--- Check git status for all repos! ---" | tee $TMP
  echo "" | tee -a $TMP

  while read line
  do
      pushd $PWD/$line > /dev/null

      echo "__ git status for repository: $line __" | tee -a $TMP
      if [ "$ALL" ]
        then
          git-branch-status -av | tee -a $TMP
          git status -s | tee -a $TMP
        else
          git-branch-status -v | tee -a $TMP
          git status -s | tee -a $TMP
      fi
      echo "" | tee -a $TMP

      popd > /dev/null
  done < $REPOS

  # clean up TMP files
  rm $REPOS

fi

if [ "$OUTPUT" == "" ]
  then
    echo "Done."
  else
    touch $OUTPUT
    cat $TMP > $OUTPUT
fi

rm $TMP

exit
